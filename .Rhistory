testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
# Set variables
#src.dir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/_scripts"
src.dir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/R_scripts/scripts"
#cropParamFile <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/crop-parameters/crop-parameters.csv"
cropParamFile <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/R_scripts/crops_parameters/crop-parameters_cbean.csv"
#cropDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Modelling/Sp_Barley"
cropDir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/Modelling/Cbean"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_ascii"
cDir <- "D:\Backup_JG_Perez\1_Failed_Season_Bean_Africa\G.EcoCrop\climate\Global_2_5min_ascii"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "cbean"
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
# Set variables
#src.dir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/_scripts"
src.dir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/R_scripts/scripts"
#cropParamFile <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/crop-parameters/crop-parameters.csv"
cropParamFile <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/R_scripts/crops_parameters/crop-parameters_cbean.csv"
#cropDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Modelling/Sp_Barley"
cropDir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/Modelling/Cbean"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_ascii"
cDir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/climate/Global_2_5min/_ascii"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "cbean"
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
# Set variables
#src.dir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/_scripts"
src.dir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/R_scripts/scripts"
#cropParamFile <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/crop-parameters/crop-parameters.csv"
cropParamFile <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/R_scripts/crops_parameters/crop-parameters_cbean.csv"
#cropDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Modelling/Sp_Barley"
cropDir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/Modelling/Cbean"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_ascii"
cDir <- "D:/Backup_JG_Perez/1_Failed_Season_Bean_Africa/G.EcoCrop/climate/Global_2_5min/_ascii"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "cbean"
#######################################
#######          CURRENT         ######
#######################################
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
src.dir <- "D:/BACKUP_JG/2014/6_BOUNDERLANDS/JG_CIAT/EcoCrop/scripts"
cropParamFile <- "D:/BACKUP_JG/2014/6_BOUNDERLANDS/JG_CIAT/EcoCrop/crop_parameters/frijol-parameters.csv"
cropDir <- "D:/BACKUP_JG/2014/6_BOUNDERLANDS/JG_CIAT/EcoCrop/ouput"
cDir <- "D:/BACKUP_JG/2014/6_BOUNDERLANDS/JG_CIAT/Climate_ecuador/current/_ascii"
crop <- "cbean"
cDir <- "D:/BACKUP_JG/2014/6_BOUNDERLANDS/JG_CIAT/Climate_ecuador/current/_ascii"
cDir
crop <- "cbean"
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
src.dir <- "D:/Backup_JG/Bounderlands/EcoCrop/scripts"
cropParamFile <- "D:/Backup_JG/Bounderlands/EcoCrop/crop_parameters/all_crops.csv"
cropDir <- "D:/Backup_JG/Bounderlands/EcoCrop/ouput/Ecuador"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_asciis"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "crop"
fDir <- "D:/Backup_JG/Bounderlands/Climate/CMIP3/ecu_area/2020"
install.packages("raster")
src.dir <- "D:/Backup_JG/Bounderlands/EcoCrop/scripts"
cropParamFile <- "D:/Backup_JG/Bounderlands/EcoCrop/crop_parameters/all_Ecuador.csv"
cropDir <- "D:/Backup_JG/Bounderlands/EcoCrop/ouput/Ecuador"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_asciis"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "crop"
fDir <- "D:/Backup_JG/Bounderlands/Climate/CMIP3/ecu_area/2050"
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/futureRuns.tmp.R",sep=""))
source(paste(src.dir,"/src/impacts.R",sep=""))
source(paste(src.dir,"/src/uncertainty.R",sep=""))
#Global climate models (SRES_A1B)
gls <- c("bccr_bcm2_0","cccma_cgcm3_1_t47","cnrm_cm3","csiro_mk3_0","csiro_mk3_5","gfdl_cm2_0","gfdl_cm2_1",
"giss_model_er","ingv_echam4","inm_cm3_0","ipsl_cm4","miroc3_2_medres","miub_echo_g",
"mpi_echam5","mri_cgcm2_3_2a","ncar_ccsm3_0","ncar_pcm1","ukmo_hadcm3","ukmo_hadgem1")
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
cat("Calculate Suitability projected onto future/n")
#########################################################
############ Loop through the tests #####################
for (n in 2:nTest){
testName <- names(cropPar)[n] #Name of the last test
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
#Loop aroudn GCMs
for (gcm in gls) {
rDir <- paste(cropDir, "/analyses/runs-future/", gcm, sep="") #Output folder for each GCM
aDir <- paste(fDir, "/", gcm, sep="")  #Folder of future climate data
if (!file.exists(paste(rDir, "/", crop, "_", testName, "_suitability.asc", sep=""))) {
cat("/tFutSuitCalc ", gcm, "/n")
#Run the function
fut <- suitCalc(climPath = aDir,
Gmin=cropPar[1,n],
Gmax=cropPar[2,n],
Tkmp=cropPar[3,n],
Tmin=cropPar[4,n],
Topmin=cropPar[5,n],
Topmax=cropPar[6,n],
Tmax=cropPar[7,n],
Rmin=cropPar[8,n],
Ropmin=cropPar[9,n],
Ropmax=cropPar[10,n],
Rmax=cropPar[11,n],
outfolder = rDir,
sowDat="NA",
harDat="NA",
cropname = paste(crop, "_", testName, sep=""))
} else { cat("/tFutSuitCalc", crop, " ", testName, "/t", gcm, "/tdone/n")}
}
}
src.dir <- "D:/Backup_JG/Bounderlands/EcoCrop/scripts"
#cropParamFile <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/crop-parameters/crop-parameters.csv"
cropParamFile <- "D:/Backup_JG/Bounderlands/EcoCrop/crop_parameters/all_Ecuador.csv"
#cropDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Modelling/Sp_Barley"
cropDir <- "D:/Backup_JG/Bounderlands/EcoCrop/ouput/Ecuador/Current"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_ascii"
cDir <- "D:/Backup_JG/Bounderlands/Climate/CMIP3/ecu_area/current"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "crop"
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
#src.dir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/_scripts"
src.dir <- "D:/Backup_JG/Bounderlands/EcoCrop/scripts"
#cropParamFile <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/crop-parameters/crop-parameters.csv"
cropParamFile <- "D:/Backup_JG/Bounderlands/EcoCrop/crop_parameters/all_Ecuador.csv"
#cropDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Modelling/Sp_Barley"
cropDir <- "D:/Backup_JG/Bounderlands/EcoCrop/ouput/Ecuador/Current"
#cDir <- "//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/climate/world_10min/_ascii"
cDir <- "D:/Backup_JG/Bounderlands/Climate/CMIP3/ecu_area/current"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "crop"
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
src.dir <- "D:/BACKUP_JG/2014/6_BOUNDERLANDS/JG_CIAT/EcoCrop/Scripts_EcoCrop"
cropParamFile <- "D:/Backup_JG/Bounderlands/EcoCrop/crop_parameters/all_Ecuador.csv"
cropDir <- "D:/Backup_JG/Bounderlands/EcoCrop/ouput/Ecuador/Current"
cDir <- "D:/Backup_JG/Bounderlands/Climate/CMIP3/ecu_area/current"
crop <- "crop"
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
yy
for (n in 2:nTest){
testName <- names(cropPar)[n]  #Name of the tests
#Source scripts and libraries
#stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model_1.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,n], #Minimum lenght of the growing season
Gmax=cropPar[2,n], #Maximum lenght of the growing season
Tkmp=cropPar[3,n], #Killing temperature
Tmin=cropPar[4,n], #Minimum temperature
Topmin=cropPar[5,n], #Minimum optimum temperature
Topmax=cropPar[6,n], #Maximum optimum temperature
Tmax=cropPar[7,n], #Maximum temperature
Rmin=cropPar[8,n], #Minimum precipitation
Ropmin=cropPar[9,n], #Minimum optimum precipitation
Ropmax=cropPar[10,n], #Maximum optimum precipitation
Rmax=cropPar[11,n], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
}
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
for (n in 2:nTest){
testName <- names(cropPar)[n]  #Name of the tests
#Source scripts and libraries
#stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model_1.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,n], #Minimum lenght of the growing season
Gmax=cropPar[2,n], #Maximum lenght of the growing season
Tkmp=cropPar[3,n], #Killing temperature
Tmin=cropPar[4,n], #Minimum temperature
Topmin=cropPar[5,n], #Minimum optimum temperature
Topmax=cropPar[6,n], #Maximum optimum temperature
Tmax=cropPar[7,n], #Maximum temperature
Rmin=cropPar[8,n], #Minimum precipitation
Ropmin=cropPar[9,n], #Minimum optimum precipitation
Ropmax=cropPar[10,n], #Maximum optimum precipitation
Rmax=cropPar[11,n], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
}
src.dir <- "D:/Backup_JG/Bounderlands/EcoCrop/scripts_EcoCrop"
cropParamFile <- "D:/Backup_JG/Bounderlands/EcoCrop/crop_parameters/all_Ecuador.csv"
cropDir <- "D:/Backup_JG/Bounderlands/EcoCrop/ouput/Ecuador/Current"
cDir <- "D:/Backup_JG/Bounderlands/Climate/CMIP3/ecu_area/current"
#sowDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/2000_sta_2.asc"
#harDat="//dapadfs/workspace_cluster_3/vulnerability-analysis/EcoCrop-development/Growing_season/end_date.asc"
crop <- "crop"
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
for (n in 2:nTest){
testName <- names(cropPar)[n]  #Name of the tests
#Source scripts and libraries
#stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model_1.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,n], #Minimum lenght of the growing season
Gmax=cropPar[2,n], #Maximum lenght of the growing season
Tkmp=cropPar[3,n], #Killing temperature
Tmin=cropPar[4,n], #Minimum temperature
Topmin=cropPar[5,n], #Minimum optimum temperature
Topmax=cropPar[6,n], #Maximum optimum temperature
Tmax=cropPar[7,n], #Maximum temperature
Rmin=cropPar[8,n], #Minimum precipitation
Ropmin=cropPar[9,n], #Minimum optimum precipitation
Ropmax=cropPar[10,n], #Maximum optimum precipitation
Rmax=cropPar[11,n], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
}
src.dir <- "D:/_scripts/EcoCrop/scripts"
ropParamFile <- "Z:/CDKN_CARIBE_CC_SAM/Jamaica/Modeling/EcoCrop/Crop_Parameters/cocoa_parameters.csv"
cropDir <- "Z:/CDKN_CARIBE_CC_SAM/Jamaica/Modeling/EcoCrop/Output/Current"
cDir <- "Z:/CDKN_CARIBE_CC_SAM/Jamaica/ClimateData/_baseline"
crop <- "Cocoa"
#######################################
#######          CURRENT         ######
#######################################
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
cropParamFile
src.dir <- "D:/_scripts/EcoCrop/scripts"
cropParamFile <- "Z:/CDKN_CARIBE_CC_SAM/Jamaica/Modeling/EcoCrop/Crop_Parameters/cocoa_parameters.csv"
cropDir <- "Z:/CDKN_CARIBE_CC_SAM/Jamaica/Modeling/EcoCrop/Output/Current"
cDir <- "Z:/CDKN_CARIBE_CC_SAM/Jamaica/ClimateData/_baseline"
crop <- "Cocoa"
#######################################
#######          CURRENT         ######
#######################################
# Reading crop parameters from parameter file
cropPar <- read.csv(cropParamFile, header=T)
nTest <- ncol(cropPar) #Number of test into file crop parameters
testName <- names(cropPar)[nTest] #Name of the last test
#Source scripts and libraries
stop("no")
library(raster);library(maptools);library(rgdal);library(sp)
source(paste(src.dir,"/src/EcoCrop-model.R",sep=""))
if (!file.exists(paste(cropDir, "/analyses/runs/", crop, "_", testName, "_suitability.asc", sep=""))) {
#Run principal function
cat(paste("Processing : ", crop, " ", testName, "/n", sep=""))
eco <- suitCalc(climPath=cDir,
Gmin=cropPar[1,nTest], #Minimum lenght of the growing season
Gmax=cropPar[2,nTest], #Maximum lenght of the growing season
Tkmp=cropPar[3,nTest], #Killing temperature
Tmin=cropPar[4,nTest], #Minimum temperature
Topmin=cropPar[5,nTest], #Minimum optimum temperature
Topmax=cropPar[6,nTest], #Maximum optimum temperature
Tmax=cropPar[7,nTest], #Maximum temperature
Rmin=cropPar[8,nTest], #Minimum precipitation
Ropmin=cropPar[9,nTest], #Minimum optimum precipitation
Ropmax=cropPar[10,nTest], #Maximum optimum precipitation
Rmax=cropPar[11,nTest], #Maximum precipitation
outfolder = paste(cropDir, "/analyses/runs", sep=""),
#sowDat=sowDat,
#harDat=harDat,
cropname=paste(crop, "_", testName, sep=""))
} else { cat(paste("Processed : ", crop, " ", testName, "/n", sep=""))}
